from collections import defaultdict
from math import sqrt

bombs

adj = defaultdict(list)
in_degree = defaultdict(int)
n = len(bombs)

for i in range(n):
    if tuple(bombs[i]) in adj:
        continue

    for j in range(i + 1, n):
        x,y,r = bombs[i]
        u,v,p = bombs[j]
        d = sqrt((x-u)**2 + (y-v)**2)

        if d <= r:
            adj[i].append(j)
        if d <= p:
            adj[j].append(i)


def dfs(bomb: tuple):
    discovered.add(bomb)
    for neigh in adj[bomb]:
        if neigh not in discovered:
            dfs(neigh)

max_bombs = 0

for i in range(n):
    discovered = set()
    dfs(i)
    max_bombs = max(max_bombs, len(discovered))

print(max_bombs)
